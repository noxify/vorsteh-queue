module.exports = {
  apps: [
    {
      name: "email-worker",
      interpreter: "node",
      interpreter_args: "--import tsx/esm",

      script: "./src/workers/email-worker.ts",
      instances: 2,
      exec_mode: "cluster",
      env: {
        NODE_ENV: "production",
        QUEUE_NAME: "email-queue",
        CONCURRENCY: "3",
      },
      error_file: "./logs/email-worker-error.log",
      out_file: "./logs/email-worker-out.log",
      log_file: "./logs/email-worker.log",
      time: true,
      autorestart: true,
      max_restarts: 10,
      min_uptime: "10s",
      max_memory_restart: "500M",
    },
    {
      name: "image-worker",
      interpreter: "node",
      interpreter_args: "--import tsx/esm",
      script: "./src/workers/image-worker.ts",
      instances: 1,
      exec_mode: "fork",
      env: {
        NODE_ENV: "production",
        QUEUE_NAME: "image-queue",
        CONCURRENCY: "2",
      },
      error_file: "./logs/image-worker-error.log",
      out_file: "./logs/image-worker-out.log",
      log_file: "./logs/image-worker.log",
      time: true,
      autorestart: true,
      max_restarts: 10,
      min_uptime: "10s",
      max_memory_restart: "1G",
    },
    {
      name: "report-worker",
      interpreter: "node",
      interpreter_args: "--import tsx/esm",

      script: "./src/workers/report-worker.ts",
      instances: 1,
      exec_mode: "fork",
      env: {
        NODE_ENV: "production",
        QUEUE_NAME: "report-queue",
        CONCURRENCY: "1",
      },
      error_file: "./logs/report-worker-error.log",
      out_file: "./logs/report-worker-out.log",
      log_file: "./logs/report-worker.log",
      time: true,
      autorestart: true,
      max_restarts: 5,
      min_uptime: "30s",
      max_memory_restart: "2G",
      cron_restart: "0 2 * * *", // Restart daily at 2 AM
    },
  ],
}
